{
  "problem": "二重ループと条件分岐を使う問題です。まずは格子模様だけを描いてみましょう。i行j列の色は「i+jが偶数か？」で分岐するとうまく塗分けられます。",
  "start": {
    "optionType": "policy",
    "suggestion": "初めに何をするか決めましょう.",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "チェック柄を描く",
        "next": "grid"
      },
      {
        "text": "円を描く",
        "next": "ellipse"
      },
      {
        "text": "縁をなくす",
        "next": "noStroke"
      }
    ]
  },
  "grid": {
    "optionType": "policy",
    "suggestion": "チェック柄を表現するにはどうすれば良いか考えましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "四角形を1つ1つ並べる",
        "next": "grid_rect"
      },
      {
        "text": "for文と四角形を使って格子を表現する",
        "next": "grid_quiz"
      }
    ]
  },
  "grid_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形を使って格子を表現するにはfor文を二重にして平面上の座標を表現する必要があります．正しいfor文はどれでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "for(let i = 0; i < 8; i--) {\n  for (let j = 0; j < 8; j-- {\n }  \n}",
        "next": "grid_wrong_one"
      },
      {
        "text": "for(let i = 0; i < 8; j++) {\n  for (let j = 0; j < 8; i++) {\n }  \n}",
        "next": "grid_wrong_two"
      },
      {
        "text": "for(let i = 0; i < 8; i++) {\n  for (let j = 0; j < 8; j++) {\n }  \n}",
        "next": "grid_correct"
      }
    ]
  },
  "grid_wrong_one": {
    "optionType": "policy",
    "message": "for文の条件が違います",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i--) {\n    for (let j = 0; j < 8; j--) {\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_wrong_two": {
    "optionType": "policy",
    "message": "for文の条件が違います",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; j++) {\n    for (let j = 0; j < 8; i++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形を1つ1つ並べる",
        "next": "grid_rect_one"
      },
      {
        "text": "for文と四角形を使って格子を表現する",
        "next": "grid_quiz"
      }
    ]
  },
  "grid_correct": {
    "optionType": "policy",
    "suggestion": "正解です!チェック柄を表現するために次は何をすべきでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "ループ変数を使い，四角形を敷き詰める",
        "next": "grid_rect"
      },
      {
        "text": "ループ変数を使い，線を引く",
        "next": "grid_line"
      }
    ]
  },
  "grid_rect": {
    "optionType": "policy",
    "suggestion": "四角形を描く方法を考えましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "p5.jsで四角形を描く関数を調べる",
        "next": "grid_rect_search"
      },
      {
        "text": "四角形を描く関数を使う",
        "next": "grid_rect_quiz"
      }
    ]
  },
  "grid_rect_search": {
    "optionType": "search",
    "suggestion": "Documentタブを確認しましょう．",
    "documentUrl": "https://p5js.org/reference/#/p5/rect",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形を描く関数を使う",
        "next": "grid_rect_quiz"
      }
    ]
  },
  "grid_rect_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形を敷き詰めるコードはどれでしょうか？",
    "documentUrl": "https://p5js.org/reference/#/p5/rect",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "rect(cx, cy, cx+s, cy+s);",
        "next": "grid_rect_wrong_one"
      },
      {
        "text": "rect(0, 0, cx, cy);",
        "next": "grid_rect_wrong_two"
      },
      {
        "text": "rect(cx, cy, s, s)",
        "next": "grid_rect_correct"
      }
    ]
  },
  "ellipse_wrong_one": {
    "optionType": "policy",
    "message": "p5.jsの座標系を確認しましょう.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  ellipse(0, 0, 48, 48);\n}",
    "choices": [
    ]
  },
  "ellipse_wrong_two": {
    "optionType": "policy",
    "message": "p5.jsの座標系を確認しましょう.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
    ]
  },
  "ellipse_correct": {
    "optionType": "policy",
    "suggestion": "正解です! 次に何をするか決めましょう.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "円を赤色に塗る",
        "next": "ellipse_fill"
      }
    ]
  },
  "ellipse_fill": {
    "optionType": "policy",
    "suggestion": "円に色を塗る方法を考えましょう.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "塗る色を決める関数について調べる",
        "next": "ellipse_fill_search"
      },
      {
        "text": "赤に塗る",
        "next": "ellipse_fill_choice"
      }
    ]
  },
  "ellipse_fill_search": {
    "optionType": "policy",
    "suggestion": "Documentタブを選択してみましょう.",
    "documentUrl": "https://p5js.org/reference/#/p5/fill",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "fill()を使って色を指定する",
        "next": "ellipse_fill_choice"
      }
    ]
  },
  "ellipse_fill_choice": {
    "optionType": "quiz",
    "suggestion": "円を赤色に塗るコードはどれでしょうか？",
    "documentUrl": "https://p5js.org/reference/#/p5/fill",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "fill(255)",
        "next": "ellipse_fill_wrong_one"
      },
      {
        "text": "fill(0, 255, 0)",
        "next": "ellipse_fill_wrong_two"
      },
      {
        "text": "fill(255, 0, 0)",
        "next": "ellipse_fill_correct"
      }
    ]
  },
  "ellipse_fill_wrong_one": {
    "optionType": "policy",
    "message": "fill(255)は白色です.ドキュメントを見直しましょう.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
    ]
  },
  "ellipse_fill_wrong_two": {
    "optionType": "policy",
    "message": "fill(0, 255, 0)は緑色です.ドキュメントを見直しましょう.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(0, 255, 0);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
    ]
  },
  "ellipse_fill_correct": {
    "optionType": "policy",
    "suggestion": "正解です! しかし正解画像と比べると円の縁が黒色になっています.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255, 0, 0);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "円の縁を消す",
        "next": "ellipse_fill_noStroke"
      }
    ]
  },
  "ellipse_fill_noStroke": {
    "optionType": "policy",
    "suggestion": "円の縁を消すにはどうすれば良いか考えましょう.",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255, 0, 0);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "図形の縁を消す関数について調べる",
        "next": "ellipse_fill_noStroke_search"
      },
      {
        "text": "縁を消す関数を使う",
        "next": "ellipse_fill_noStroke_choice"
      }
    ]
  },
  "ellipse_fill_noStroke_search": {
    "optionType": "policy",
    "suggestion": "Documentタブを選択してみましょう.",
    "documentUrl": "https://p5js.org/reference/#/p5/noStroke",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255, 0, 0);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "縁を消す関数を使う",
        "next": "ellipse_fill_noStroke_choice"
      }
    ]
  },
  "ellipse_fill_noStroke_choice": {
    "optionType": "policy",
    "suggestion": "縁を消すコードはどれでしょうか？",
    "documentUrl": "https://p5js.org/reference/#/p5/noStroke",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255, 0, 0);\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
      {
        "text": "nostroke()",
        "next": "ellipse_fill_noStroke_wrong_one"
      },
      {
        "text": "noStroke()",
        "next": "answer"
      },
      {
        "text": "NoStroke()",
        "next": "ellipse_fill_noStroke_wrong_two"
      }
    ]
  },
  "ellipse_fill_noStroke_wrong_one": {
    "optionType": "policy",
    "message": "関数のスペルを確認しましょう.",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255, 0, 0);\n  nostroke();\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
    ]
  },
  "ellipse_fill_noStroke_wrong_two": {
    "optionType": "policy",
    "message": "関数のスペルを確認しましょう.",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255, 0, 0);\n  NoStroke();\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
    ]
  },
  "answer": {
    "optionType": "policy",
    "suggestion": "🎉🎉完成です!🎉🎉",
    "sourceCode": "function setup() {\n  createCanvas(160, 120);\n  background(255);\n  fill(255, 0, 0);\n  noStroke();\n  ellipse(80, 60, 48, 48);\n}",
    "choices": [
    ]
  }
}
