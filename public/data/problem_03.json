{
  "problem": "二重ループと条件分岐を使う問題です。まずは格子模様だけを描いてみましょう。i行j列の色は「i+jが偶数か？」で分岐するとうまく塗分けられます。",
  "start": {
    "optionType": "policy",
    "suggestion": "初めに何をするか決めましょう.",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "チェック柄を描く",
        "next": "grid"
      },
      {
        "text": "円を描く",
        "next": "ellipse"
      }
    ]
  },
  "grid": {
    "optionType": "policy",
    "suggestion": "チェック柄を表現するにはどうすれば良いか考えましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "四角形を1つ1つ並べる",
        "next": "grid_rect_one"
      },
      {
        "text": "for文と四角形を使って格子を表現する",
        "next": "grid_quiz"
      }
    ]
  },
  "grid_rect_one": {
    "optionType": "quiz",
    "suggestion": "四角形を描く方法を考えましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "p5.jsで四角形を描く関数を調べる",
        "next": "grid_rect_one_search"
      },
      {
        "text": "四角形を描く関数を使う",
        "next": "grid_rect_one_quiz"
      }
    ]
  },
  "grid_rect_one_search": {
    "optionType": "search",
    "suggestion": "Documentタブを確認しましょう．",
    "documentUrl": "https://p5js.org/reference/#/p5/rect",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "四角形を描く関数を使う",
        "next": "grid_rect_one_quiz"
      }
    ]
  },
  "grid_rect_one_quiz": {
    "optionType": "quiz",
    "suggestion": "左上の1つの四角形を描画するコードはどれでしょうか？",
    "documentUrl": "https://p5js.org/reference/#/p5/rect",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "rect(0, 0, s, s);",
        "next": "grid_rect_one_correct"
      },
      {
        "text": "rect(0, s);",
        "next": "grid_rect_one_wrong_one"
      },
      {
        "text": "rect(0, s, s);",
        "next": "grid_rect_one_wrong_two"
      }
    ]
  },
  "grid_rect_one_wrong_one": {
    "optionType": "policy",
    "isExecutable": false,
    "message": "rectの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  rect(0, s);\n  }",
    "choices": [
    ]
  },
  "grid_rect_one_wrong_two": {
    "optionType": "policy",
    "isExecutable": false,
    "message": "rectの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  rect(0, s, s);\n  }",
    "choices": [
    ]
  },
  "grid_rect_one_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次に何をするか考えましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  rect(0, 0, s, s);\n  }",
    "choices": [
      {
        "text": "ループ変数を使い，四角形を敷き詰める",
        "next": "grid_rect_one_for_quiz"
      },
      {
        "text": "同様に四角形を1つずつ並べる",
        "next": "grid_rect_one_by_one"
      }
    ]
  },
  "grid_rect_one_by_one": {
    "optionType": "policy",
    "message": "この方法ではとても手間がかかってしまいます．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  rect(0, 0, s, s);\n  }",
    "choices": [
    ]
  },
  "grid_rect_one_for_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形を使って格子を表現するにはfor文を二重にして平面上の座標を表現する必要があります．正しいfor文はどれでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  rect(0, 0, s, s);\n  }",
    "choices": [
      {
        "text": "for(let i = 0; i < 8; i--) {\n  for (let j = 0; j < 8; j--) {\n }  \n}",
        "next": "grid_rect_one_for_wrong_one"
      },
      {
        "text": "for(let i = 0; i < 8; j++) {\n  for (let j = 0; j < 8; i++) {\n }  \n}",
        "next": "grid_rect_one_for_wrong_two"
      },
      {
        "text": "for(let i = 0; i < 8; i++) {\n  for (let j = 0; j < 8; j++) {\n }  \n}",
        "next": "grid_rect_one_for_correct"
      }
    ]
  },
  "grid_rect_one_for_wrong_one": {
    "optionType": "policy",
    "message": "for文の条件が違います",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i--) {\n    for (let j = 0; j < 8; j--) {\n      rect(0, 0, s, s);\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_one_for_wrong_two": {
    "optionType": "policy",
    "message": "for文の条件が違います",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; j++) {\n    for (let j = 0; j < 8; i++) {\n      rect(0, 0, s, s);\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_one_for_correct": {
    "optionType": "policy",
    "suggestion": "正解です!次にループ変数を使って四角形でチェック柄を描画しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      rect(0, 0, s, s);\n    }\n  }\n}",
    "choices": [
      {
        "text": "ループ変数を使い，四角形を敷き詰める",
        "next": "grid_rect_one_pos_quiz"
      }
    ]
  },
  "grid_rect_one_pos_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形の座標を変数を使って表現しましょう．どのコードが適切でしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      rect(0, 0, s, s);\n    }\n  }\n}",
    "choices": [
      {
        "text": "let x = i; let y = j; rect(x, y, s, s);",
        "next": "grid_rect_one_pos_wrong_one"
      },
      {
        "text": "let x = i + s; let y = j + s; rect(x, y, s, s);",
        "next": "grid_rect_one_pos_wrong_two"
      },
      {
        "text": "let x = i * s; let y = j * s; rect(x, y, s, s);",
        "next": "grid_rect_one_pos_correct"
      }
    ]
  },
  "grid_rect_one_pos_wrong_one": {
    "optionType": "policy",
    "message": "ループ変数がどのように変化するか見直してみましょう.",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i;\n      let y = j;\n      rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_one_pos_wrong_two": {
    "optionType": "policy",
    "message": "ループ変数がどのように変化するか見直してみましょう.",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i + s;\n      let y = j + s;\n      rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_one_pos_correct": {
    "optionType": "policy",
    "suggestion": "正解です！",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形を灰色に塗る",
        "next": "grid_rect_one_draw_gray_quiz"
      }
    ]
  },
  "grid_rect_one_draw_gray_quiz": {
    "optionType": "quiz",
    "suggestion": "正解画像と同じように四角形を塗るにはどのコードが正しいでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
      {
        "text": "if (i % 2 === 0) { fill(122); }",
        "next": "grid_rect_one_draw_gray_wrong_one"
      },
      {
        "text": "if (i + j % 2 === 0) { fill(122); }",
        "next": "grid_rect_one_draw_gray_wrong_two"
      },
      {
        "text": "if ((i + j) % 2 === 0) { fill(122); }",
        "next": "grid_rect_one_draw_gray_correct"
      }
    ]
  },
  "grid_rect_one_draw_gray_wrong_one": {
    "optionType": "policy",
    "message": "if文の条件を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if (i % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_one_draw_gray_wrong_two": {
    "optionType": "policy",
    "message": "if文の条件を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if (i + j % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_one_draw_gray_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次に何をしますか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形の縁を消す",
        "next": "rect_one_erase_edge_quiz"
      }
    ]
  },
  "rect_one_erase_edge_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形の縁を消すにはどのコードが正しいでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "nostroke();",
        "next": "rect_one_erase_edge_wrong_one"
      },
      {
        "text": "NoStroke();",
        "next": "rect_one_erase_edge_wrong_two"
      },
      {
        "text": "noStroke();",
        "next": "rect_one_erase_edge_correct"
      }
    ]
  },
  "rect_one_erase_edge_wrong_one": {
    "optionType": "quiz",
    "isExecutable": false,
    "message": "関数のスペルを確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  nostroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "rect_one_erase_edge_wrong_two": {
    "optionType": "policy",
    "isExecutable": false,
    "message": "関数のスペルを確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  NoStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "rect_one_erase_edge_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次に何をしましょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "円を描く",
        "next": "grid_circle"
      }
    ]
  },
  "grid_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形を使って格子を表現するにはfor文を二重にして平面上の座標を表現する必要があります．正しいfor文はどれでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n}",
    "choices": [
      {
        "text": "for(let i = 0; i < 8; i--) {\n  for (let j = 0; j < 8; j--) {\n }  \n}",
        "next": "grid_wrong_one"
      },
      {
        "text": "for(let i = 0; i < 8; j++) {\n  for (let j = 0; j < 8; i++) {\n }  \n}",
        "next": "grid_wrong_two"
      },
      {
        "text": "for(let i = 0; i < 8; i++) {\n  for (let j = 0; j < 8; j++) {\n }  \n}",
        "next": "grid_correct"
      }
    ]
  },
  "grid_wrong_one": {
    "optionType": "policy",
    "message": "for文の条件が違います",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i--) {\n    for (let j = 0; j < 8; j--) {\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_wrong_two": {
    "optionType": "policy",
    "message": "for文の条件が違います",
    "isExecutable": false,
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; j++) {\n    for (let j = 0; j < 8; i++) {\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_correct": {
    "optionType": "policy",
    "suggestion": "正解です!チェック柄を表現するために次は何をすべきでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "ループ変数を使い，四角形を敷き詰める",
        "next": "grid_rect"
      }
    ]
  },
  "grid_rect": {
    "optionType": "policy",
    "suggestion": "四角形を描く方法を考えましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "p5.jsで四角形を描く関数を調べる",
        "next": "grid_rect_search"
      },
      {
        "text": "四角形を描く関数を使う",
        "next": "grid_rect_pos_quiz"
      }
    ]
  },
  "grid_rect_search": {
    "optionType": "search",
    "suggestion": "Documentタブを確認しましょう．",
    "documentUrl": "https://p5js.org/reference/#/p5/rect",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形を描く関数を使う",
        "next": "grid_rect_pos_quiz"
      }
    ]
  },
  "grid_rect_pos_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形の座標を変数を使って表現しましょう．どのコードが適切でしょうか？",
    "documentUrl": "https://p5js.org/reference/#/p5/rect",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    }\n  }\n}",
    "choices": [
      {
        "text": "let x = i; let y = j; rect(x, y, s, s);",
        "next": "grid_rect_pos_wrong_one"
      },
      {
        "text": "let x = i + s; let y = j + s;",
        "next": "grid_rect_pos_wrong_two"
      },
      {
        "text": "let x = i * s; let y = j * s;",
        "next": "grid_rect_pos_correct"
      }
    ]
  },
  "grid_rect_pos_wrong_one": {
    "optionType": "policy",
    "message": "ループ変数がどのように変化するか見直してみましょう.",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n    let x = i;\n    let y = j;\n    rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_pos_wrong_two": {
    "optionType": "policy",
    "message": "ループ変数がどのように変化するか見直してみましょう.",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n  let x = i;\n  let y = j;\n   rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
    ]
  },
  "grid_rect_pos_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次にいくつかの四角形を灰色に塗ってチェック柄を完成させましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n  let x = i * s;\n  let y = j * s;\n   rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形を灰色に塗る",
        "next": "draw_gray_quiz"
      }
    ]
  },
  "draw_gray_quiz": {
    "optionType": "quiz",
    "suggestion": "正解画像と同じように四角形を塗るにはどのコードが正しいでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n  let x = i * s;\n  let y = j * s;\n   rect(x, y, s, s);\n    }\n  }\n}",
    "choices": [
      {
        "text": "if (i % 2 === 0) { fill(122); }",
        "next": "draw_gray_wrong_one"
      },
      {
        "text": "if (i + j % 2 === 0) { fill(122); }",
        "next": "draw_gray_wrong_two"
      },
      {
        "text": "if ((i + j) % 2 === 0) { fill(122); }",
        "next": "draw_gray_correct"
      }
    ]
  },
  "draw_gray_wrong_one": {
    "optionType": "policy",
    "message": "if文の条件を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if (i % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_gray_wrong_two": {
    "optionType": "policy",
    "message": "if文の条件を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if (i + j % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_gray_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次に何をしますか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形の縁を消す",
        "next": "erase_edge_quiz"
      }
    ]
  },
  "erase_edge_quiz": {
    "optionType": "quiz",
    "suggestion": "四角形の縁を消すにはどのコードが正しいでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "nostroke()",
        "next": "erase_edge_wrong_one"
      },
      {
        "text": "NoStroke()",
        "next": "erase_edge_wrong_two"
      },
      {
        "text": "noStroke()",
        "next": "erase_edge_correct"
      }
    ]
  },
  "erase_edge_wrong_one": {
    "optionType": "quiz",
    "isExecutable": false,
    "message": "関数のスペルを確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  nostroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(i*s, j*s, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "erase_edge_wrong_two": {
    "optionType": "policy",
    "isExecutable": false,
    "message": "関数のスペルを確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  NoStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(i*s, j*s, s, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "erase_edge_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次に何をしましょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(i*s, j*s, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "四角形のx, y座標を変数を使って表す",
        "next": "erase_pos_var"
      }
    ]
  },
  "grid_circle": {
    "optionType": "policy",
    "suggestion": "円を描くためにまず何をしますか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "赤い円を描く",
        "next": "draw_red_circle_if_quiz"
      },
      {
        "text": "黒い円を描く",
        "next": "draw_black_circle_if_quiz"
      }
    ]
  },
  "draw_red_circle_if_quiz": {
    "optionType": "quiz",
    "suggestion": "赤い円は格子の3行目まで規則的に配置されています．赤い円を配置する条件を表すif文はどれでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "if (((i + j) % 2 === 0) && (j < 3)) { }",
        "next": "draw_red_circle_ellipse_quiz"
      },
      {
        "text": "if (((i + j) % 2 === 0) && (j < 4)) { }",
        "next": "draw_red_circle_if_wrong_one"
      },
      {
        "text": "if (((i + j) / 2 === 0) && (j < 3)) { }",
        "next": "draw_red_circle_if_wrong_two"
      }
    ]
  },
  "draw_red_circle_if_wrong_one": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 4)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_red_circle_if_wrong_two": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) / 2 === 0) && (j < 3)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_red_circle_ellipse_quiz": {
    "optionType": "quiz",
    "suggestion": "正解です！次に実際に赤い円を描いていきましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "fill(255, 0, 0); ellipse(x + s / 2, y + s/2, d);",
        "next": "draw_red_circle_ellipse_correct"
      },
      {
        "text": "fill(255, 0, 0); ellipse(x, y, d);",
        "next": "draw_red_circle_ellipse_wrong_one"
      },
      {
        "text": "fill(255, 0, 0); ellipse(x, y, s);",
        "next": "draw_red_circle_ellipse_wrong_two"
      }
    ]
  },
  "draw_red_circle_ellipse_wrong_one": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x, y, d);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_red_circle_ellipse_wrong_two": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x, y, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_red_circle_ellipse_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次に何をしましょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "黒い円を描画する",
        "next": "second_draw_black_circle_if_quiz"
      }
    ]
  },
  "draw_black_circle_if_quiz": {
    "optionType": "quiz",
    "suggestion": "黒い円は格子の6行目から8行目まで規則的に配置されています．黒い円を配置する条件を表すif文はどれでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "if (((i + j) % 2 === 0) && (4 < j)) { }",
        "next": "draw_black_circle_ellipse_quiz"
      },
      {
        "text": "if (((i + j) % 2 === 0) && (j < 8)) { }",
        "next": "draw_black_circle_if_wrong_one"
      },
      {
        "text": "if (((i + j) / 2 === 0) && (6 < j)) { }",
        "next": "draw_black_circle_if_wrong_two"
      }
    ]
  },
  "draw_black_circle_if_wrong_one": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_black_circle_if_wrong_two": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) / 2 === 0) && (j < 8)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_black_circle_ellipse_quiz": {
    "optionType": "quiz",
    "suggestion": "正解です！次に実際に赤い円を描いていきましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (6 < j)) {\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "fill(0); ellipse(x + s / 2, y + s/2, d);",
        "next": "draw_black_circle_ellipse_correct"
      },
      {
        "text": "fill(0); ellipse(x, y, d);",
        "next": "draw_black_circle_ellipse_wrong_one"
      },
      {
        "text": "fill(0); ellipse(x, y, s);",
        "next": "draw_black_circle_ellipse_wrong_two"
      }
    ]
  },
  "draw_black_circle_ellipse_wrong_one": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x, y, d);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_black_circle_ellipse_wrong_two": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x, y, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "draw_black_circle_ellipse_correct": {
    "optionType": "policy",
    "suggestion": "正解です！次に何をしましょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "赤い円を描画する",
        "next": "second_draw_red_circle_if_quiz"
      }
    ]
  },
  "second_draw_black_circle_if_quiz": {
    "optionType": "quiz",
    "suggestion": "黒い円は格子の6行目から8行目まで規則的に配置されています．黒い円を配置する条件を表すif文はどれでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "if (((i + j) % 2 === 0) && (4 < j)) { }",
        "next": "second_draw_black_circle_ellipse_quiz"
      },
      {
        "text": "if (((i + j) % 2 === 0) && (j < 8)) { }",
        "next": "second_draw_black_circle_if_wrong_one"
      },
      {
        "text": "if (((i + j) % 2 === 0) && (5 < j)) { }",
        "next": "second_draw_black_circle_if_wrong_two"
      }
    ]
  },
  "second_draw_black_circle_if_wrong_one": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (j < 8)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "second_draw_black_circle_if_wrong_two": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (5 < j)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "second_draw_black_circle_ellipse_quiz": {
    "optionType": "quiz",
    "suggestion": "正解です！次に実際に黒い円を描いていきましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "fill(0); ellipse(x + s / 2, x + s/2, d);",
        "next": "answer"
      },
      {
        "text": "fill(0); ellipse(x, y, d);",
        "next": "second_draw_black_circle_ellipse_wrong_one"
      },
      {
        "text": "fill(0); ellipse(x, y, s);",
        "next": "second_draw_black_circle_ellipse_wrong_two"
      }
    ]
  },
  "second_draw_black_circle_ellipse_wrong_one": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x, y, d);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "second_draw_black_circle_ellipse_wrong_two": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x, y, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "second_draw_red_circle_if_quiz": {
    "optionType": "quiz",
    "suggestion": "赤い円は格子の3行目まで規則的に配置されています．赤い円を配置する条件を表すif文はどれでしょうか？",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "if (((i + j) % 2 === 0) && (j < 3)) { }",
        "next": "second_draw_red_circle_ellipse_quiz"
      },
      {
        "text": "if (((i + j) % 2 === 0) && (j < 4)) { }",
        "next": "second_draw_red_circle_if_wrong_one"
      },
      {
        "text": "if (((i + j) % 2 === 0) && (4 < j)) { }",
        "next": "second_draw_red_circle_if_wrong_two"
      }
    ]
  },
  "second_draw_red_circle_if_wrong_one": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (j < 8)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "second_draw_red_circle_if_wrong_two": {
    "optionType": "policy",
    "message": "条件式を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (5 < j)) {\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "second_draw_red_circle_ellipse_quiz": {
    "optionType": "quiz",
    "suggestion": "正解です！次に実際に黒い円を描いていきましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n      }\n    }\n  }\n}",
    "choices": [
      {
        "text": "fill(0); ellipse(x + s / 2, x + s/2, d);",
        "next": "answer"
      },
      {
        "text": "fill(0); ellipse(x, y, d);",
        "next": "second_draw_red_circle_ellipse_wrong_one"
      },
      {
        "text": "fill(0); ellipse(x, y, s);",
        "next": "second_draw_red_circle_ellipse_wrong_two"
      }
    ]
  },
  "second_draw_red_circle_ellipse_wrong_one": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x, y, d);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "second_draw_red_circle_ellipse_wrong_two": {
    "optionType": "policy",
    "message": "ellipseの引数を確認しましょう．",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x, y, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  },
  "answer": {
    "optionType": "policy",
    "suggestion": "🎉🎉完成です!🎉🎉",
    "sourceCode": "function setup() {\n  let s = 50;\n  let d = 40;\n  createCanvas(400, 400);\n  background(255);\n  noStroke();\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let x = i * s;\n      let y = j * s;\n      if ((i + j) % 2 === 0) {\n        fill(122);\n        rect(x, y, s, s);\n      }\n      if (((i + j) % 2 === 0) && (j < 3)) {\n        fill(255, 0, 0);\n        ellipse(x + s / 2, y + s / 2, d);\n      }\n      if (((i + j) % 2 === 0) && (4 < j)) {\n        fill(0);\n        ellipse(x + s / 2, y + s / 2, s);\n      }\n    }\n  }\n}",
    "choices": [
    ]
  }
}
