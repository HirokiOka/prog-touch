{
  "problemId": "5-1",
  "problem": "EUの旗を描きましょう. 星を書く関数を作り, それを円周上に描きます.",
  "viewWidth": 120,
  "viewHeight": 120,
  "canvasWidth": 120,
  "canvasHeight": 120,

  "start": {
    "optionType": "policy",
    "isExecutable": "true",
    "message": "はじめに何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "星を1つ描いてみる",
        "next": "draw_star_algorithm"
      }
    ]
  },

  "draw_star_algorithm": {
    "optionType": "algorithm",
    "isExecutable": "true",
    "message": "星を1つ描くために何をしますか？",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "キャンバスの中心から円を5等分し, 360 * 2/5 ずつずらしてポイントした5点を繋げる",
        "next": "draw_star_confirm"
      },
      {
        "text": "キャンバスの中心から円を5等分し, 360 * 1/5 ずつずらしてポイントした5点を繋げる",
        "next": "draw_star_e_confirm"
      },
      {
        "text": "文字列★を描画する",
        "next": "draw_string_star_e_confirm"
      }
    ]
  },

  "draw_star_confirm": {
    "optionType": "confirm",
    "isExecutable": "true",
    "message": "360 * 2/5 ずつずらしてポイントした5点を繋げるコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "fill(255, 204, 0); beginShape(); for(let i = 0; i < 5; i++){ let theta = TWO_PI * i * 2 / 5 - HALF_PI; let x = width/2 + cos(theta) * 50; let y = height/2 + sin(theta) * 50; vertex(x,y); }",
        "next": "star_function_policy"
      }
    ]
  },

  "draw_star_e_confirm": {
    "optionType": "confirm",
    "isExecutable": "true",
    "message": "360 * 2/5 ずつずらしてポイントした5点を繋げるコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "fill(255, 204, 0); beginShape(); for(let i = 0; i < 5; i++){ let theta = TWO_PI * i / 5 - HALF_PI; let x = width/2 + cos(theta) * 50; let y = height/2 + sin(theta) * 50; vertex(x,y); }",
        "next": "draw_star_e_error"
      }
    ]
  },

  "draw_string_star_e_confirm": {
    "optionType": "confirm",
    "isExecutable": "true",
    "message": "文字列★を表示するコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "fill(255, 204, 0); textAlign('center', 'center'); textSize(100); text('★', width/2, height/2);",
        "next": "draw_string_star_e_error"
      }
    ]
  },

  "star_function_policy": {
    "optionType": "policy",
    "isExecutable": "true",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n\n  fill(255, 204, 0);\n  beginShape();\n  for(let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = width/2 + cos(theta) * 50;\n    let y = height/2 + sin(theta) * 50;\n    vertex(x, y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "星を描く処理を関数にする",
        "next": "star_function_algorithm_1"
      }
    ]
  },

  "star_function_algorithm_1": {
    "optionType": "algorithm",
    "isExecutable": "true",
    "message": "星を描く処理を関数にする",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n\n  fill(255, 204, 0);\n  beginShape();\n  for(let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = width/2 + cos(theta) * 50;\n    let y = height/2 + sin(theta) * 50;\n    vertex(x, y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "星を描く処理を関数として宣言する",
        "next": "star_function_confirm_1"
      }
    ]
  },

  "star_function_confirm_1": {
    "optionType": "confirm",
    "isExecutable": "true",
    "message": "星を描く処理を関数として宣言するコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n\n  fill(255, 204, 0);\n  beginShape();\n  for(let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = width/2 + cos(theta) * 50;\n    let y = height/2 + sin(theta) * 50;\n    vertex(x, y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "function star(cx, cy, r){ beginShape(); for (let i = 0; i < 5; i++){ let theta = TWO_PI * i * 2 / 5 - HALF_PI; let x = cx + cos(theta) * r; let y = cy + sin(theta) * r; vertex(x,y); } endShape(CLOSE); }",
        "next": "star_function_algorithm_2"
      }
    ]
  },

  "star_function_algorithm_2": {
    "optionType": "algorithm",
    "isExecutable": "true",
    "message": "星を描く処理を関数にするために，次に何をしますか？",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n\n  fill(255, 204, 0);\n  beginShape();\n  for(let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = width/2 + cos(theta) * 50;\n    let y = height/2 + sin(theta) * 50;\n    vertex(x, y);\n  }\n  endShape(CLOSE);\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "星を描く関数を呼び出し, 星を描く",
        "next": "star_function_confirm_2"
      }
    ]
  },

  "star_function_confirm_2": {
    "optionType": "confirm",
    "isExecutable": "true",
    "message": "星を描く関数を呼び出すコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n\n  fill(255, 204, 0);\n  beginShape();\n  for(let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = width/2 + cos(theta) * 50;\n    let y = height/2 + sin(theta) * 50;\n    vertex(x, y);\n  }\n  endShape(CLOSE);\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "star(width/2, height/2, 50);",
        "next": "circle_star_policy"
      }
    ]
  },

  "circle_star_policy": {
    "optionType": "policy",
    "isExecutable": "true",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n  fill(255, 204, 0);\n  star(width/2, height/2, 50);\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "小さい星を輪のように並べる",
        "next": "circle_star_algorithm"
      }
    ]
  },

  "circle_star_algorithm": {
    "optionType": "algorithm",
    "isExecutable": "true",
    "message": "小さい星を輪のように並べるために何をしますか？",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n  fill(255, 204, 0);\n  star(width/2, height/2, 50);\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "キャンバスの中心から円を12等分し, 30°ずつずらして配置する",
        "next": "circle_star_confirm"
      },
      {
        "text": "キャンバスの中心から円を5等分し, 360 * 2/5 ずつずらして配置する",
        "next": "circle_star_e_confirm"
      }
    ]
  },

  "circle_star_confirm": {
    "optionType": "confirm",
    "isExecutable": "true",
    "message": "円を12等分し, 30°ずつずらして配置するコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n  fill(255, 204, 0);\n  star(width/2, height/2, 50);\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "for(let i = 0; i < 12; i++){ let theta = TWO_PI * i / 12; let x = width/2 + cos(theta) * width/4; let y = height/2 + sin(theta) * height/4; fill(255, 204, 0); star(x, y, width/20); }",
        "next": "answer"
      }
    ]
  },

  "circle_star_e_confirm": {
    "optionType": "confirm",
    "isExecutable": "true",
    "message": "円を5等分し, 360 * 2/5 ずつずらして配置するコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n  fill(255, 204, 0);\n  star(width/2, height/2, 50);\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "for(let i = 0; i < 5; i++){ let theta = TWO_PI * i * 2 / 5  - HALF_PI; let x = width/2 + cos(theta) * width/4; let y = height/2 + sin(theta) * height/4; fill(255, 204, 0); star(x, y, width/20); }",
        "next": "circle_star_e_error"
      }
    ]
  },

  "answer": {
    "optionType": "answer",
    "message": "正解です！",
    "isExecutable": "true",
    "setupFunction": "function setup(){\ncreateCanvas(120, 120);\nbackground(0, 51, 153);\nnoStroke();\nfor(let i = 0; i < 12; i++){\n  let theta = TWO_PI * i / 12;\n  let x = width/2 + cos(theta) * width/4;\n  let y = height/2 + sin(theta) * height/4;\n  fill(255, 204, 0);\n  star(x, y, width/20);\n  }\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
    ]
  },

  "draw_star_e_error": {
    "optionType": "error",
    "isExecutable": "true",
    "message": "点の配置が違います. どのように角度をずらせば星を描けるかを考えましょう.",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n\n  fill(255, 204, 0);\n  beginShape();\n  for(let i = 0; i < 5; i++){\n    let theta = TWO_PI * i / 5 - HALF_PI;\n    let x = width/2 + cos(theta) * 50;\n    let y = height/2 + sin(theta) * 50;\n    vertex(x, y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
    ]
  },

  "draw_string_star_e_error": {
    "optionType": "error",
    "isExecutable": "true",
    "message": "この問題では関数を使って星を描きましょう.",
    "setupFunction": "function setup(){\n  createCanvas(120, 120);\n  background(0, 51, 153);\n  noStroke();\n\n  fill(255, 204, 0);\n  textAlign('center', 'center');\n  textSize(100);\n  text('★', width/2, height/2);\n }",
    "drawFunction": "",
    "choices": [
    ]
  },

  "circle_star_e_error": {
    "optionType": "error",
    "isExecutable": "true",
    "message": "星を円状に配置しましょう.",
    "setupFunction": "function setup(){\ncreateCanvas(120, 120);\nbackground(0, 51, 153);\nnoStroke();\nfor(let i = 0; i < 5; i++){\n  let theta = TWO_PI * i * 2 / 5  - HALF_PI;\n  let x = width/2 + cos(theta) * width/4;\n  let y = height/2 + sin(theta) * height/4;\n  fill(255, 204, 0);\n  star(x, y, width/20);\n  }\n}\n\nfunction star(cx, cy, r){\n  beginShape();\n  for (let i = 0; i < 5; i++){\n    let theta = TWO_PI * i * 2 / 5 - HALF_PI;\n    let x = cx + cos(theta) * r;\n    let y = cy + sin(theta) * r;\n    vertex(x,y);\n  }\n  endShape(CLOSE);\n}",
    "drawFunction": "",
    "choices": [
    ]
  }
}
