{
  "problemId": "4-1",
  "problem": "ランダムな数値が10個含まれている配列の平均値，最大値，最小値を求めましょう．また，配列の値を棒グラフとして可視化しましょう．",
  "viewWidth": 120,
  "viewHeight": 120,
  "canvasWidth": 120,
  "canvasHeight": 120,

  "start": {
    "optionType": "policy",
    "message": "何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "ランダムな数値10個の配列を作成する",
        "next": "genArray_algorithm"
      }
    ]
  },

  "genArray_algorithm": {
    "optionType": "algorithm",
    "message": "ランダムな数値10個の配列を作成するために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "繰り返しを使い，ランダムな数値を10回生成し，配列に格納する",
        "next": "genArray_confirm"
      }
    ]
  },

  "genArray_confirm": {
    "optionType": "confirm",
    "message": "ランダムな数値10個の配列を作成するコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "for(let i = 0; i < 10; i++){ scores[i] = random(20, 100); }",
        "next": "calc_sum_poicy"
      }
    ]
  },
  
  "calc_sum_poicy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "配列の数値の合計を求める",
        "next": "calc_sum_algorithm"
      }
    ]
  },
  "calc_sum_algorithm": {
    "optionType": "algorithm",
    "message": "配列の数値の合計を求めるために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "繰り返しを使い，配列の数値を全て足し合わせる",
        "next": "calc_sum_confirm"
      }
    ]
  },
  "calc_sum_confirm": {
    "optionType": "confirm",
    "message": "配列の数値を全て足し合わせるコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "let sum = 0; for(let i = 0; i < scores.length; i++){ sum += scores[i]; }",
        "next": "calc_ave_policy"
      }
    ]
  },

  "calc_ave_policy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "配列の数値の平均値を計算する",
        "next": "calc_ave_algorithm"
      }
    ]
  },
  "calc_ave_algorithm": {
    "optionType": "algorithm",
    "message": "配列の数値の平均値を計算するために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "配列の数値の合計を，配列の要素数で割る",
        "next": "calc_ave_confirm"
      }
    ]
  },
  "calc_ave_confirm": {
    "optionType": "confirm",
    "message": "配列の数値の合計を配列の要素数で割るコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "let average = sum / average.length;",
        "next": "calc_max_policy"
      }
    ]
  },

  "calc_max_policy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "配列の数値の最大値を求める",
        "next": "calc_max_assign_algorithm"
      }
    ]
  },
  "calc_max_assign_algorithm": {
    "optionType": "algorithm",
    "message": "最大値を求めるために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "最大値を表現する変数を用意し，0を代入する",
        "next": "calc_max_assign_confirm"
      }
    ]
  },
  "calc_max_assign_confirm": {
    "optionType": "confirm",
    "message": "最大値用の変数に0を代入するコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "let largest = 0;",
        "next": "calc_max_for_algorithm"
      }
    ]
  },
  "calc_max_for_algorithm": {
    "optionType": "algorithm",
    "message": "最大値を求めるために，次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "繰り返しを使い，配列の各数値を比較し，大きい数値で最大値用の変数を更新していく",
        "next": "calc_max_for_confirm"
      }
    ]
  },
  "calc_max_for_confirm": {
    "optionType": "confirm",
    "message": "繰り返しで配列の数値を比較し，更新するためのコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "for(let i = 0; i < scores.length; i++){ if (largest < scores[i]) { largest = scores[i]; }}",
        "next": "calc_min_policy"
      }
    ]
  },

  "calc_min_policy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "配列の数値の最小値を求める",
        "next": "calc_min_assign_algorithm"
      }
    ]
  },
  "calc_min_assign_algorithm": {
    "optionType": "algorithm",
    "message": "最小値を求めるために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "最小値を表現する変数を用意し，100を代入する",
        "next": "calc_min_assign_confirm"
      }
    ]
  },
  "calc_min_assign_confirm": {
    "optionType": "confirm",
    "message": "最小値用の変数に0を代入するコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "let smallest = 100;",
        "next": "calc_min_for_algorithm"
      }
    ]
  },
  "calc_min_for_algorithm": {
    "optionType": "algorithm",
    "message": "最小値を求めるために，次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "繰り返しを使い，配列の各数値を比較し，小さい数値で最小値用の変数を更新していく",
        "next": "calc_min_for_confirm"
      }
    ]
  },
  "calc_min_for_confirm": {
    "optionType": "confirm",
    "message": "繰り返しで配列の数値を比較し，更新するためのコードを確認しましょう?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "for(let i = 0; i < scores.length; i++){ if (scores[i] < smallest) { smallest = scores[i]; }}",
        "next": "draw_scale_policy"
      }
    ]
  },

  "draw_scale_policy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "棒グラフの目盛り線を描画する",
        "next": "draw_scale_algorithm"
      }
    ]
  },
  "draw_scale_algorithm": {
    "optionType": "algorithm",
    "message": "棒グラフの目盛り線を描画するために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "描画領域を10分割し，繰り返しを使って目盛り線を引く",
        "next": "draw_scale_confirm"
      }
    ]
  },
  "draw_scale_confirm": {
    "optionType": "confirm",
    "message": "目盛り線を引くコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "const n = 10;　for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }",
        "next": "draw_bar_chart_policy"
      }
    ]
  },
  
  "draw_bar_chart_policy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "配列の値を棒グラフとして描画する",
        "next": "draw_bar_chart_algorithm"
      }
    ]
  },
  "draw_bar_chart_algorithm": {
    "optionType": "algorithm",
    "message": "配列を棒グラフにするために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "繰り返しを使い，各配列の値を四角形で描いて並べる",
        "next": "draw_bar_chart_confirm"
      }
    ]
  },
  "draw_bar_chart_confirm": {
    "optionType": "confirm",
    "message": "繰り返しを使って配列を四角形で描くコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "fill(0); for(let i = 0; i < scores.length; i++){ const dx = width / scores.length; const h = height * scores[i] / 100; rect(i * dx + 2, height - h, dx - 4, h);  fill(0);\n  text(scores[i].toPrecision(3), i * dx, height - h); }",
        "next": "fill_bar_chart_policy"
      }
    ]
  },

  "fill_bar_chart_policy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  fill(0)\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n  for(let i = 0; i < scores.length; i++){\n  const dx = width / scores.length;\n  const h = height * scores[i] / 100;\n  rect(i * dx + 2, height - h, dx - 4, h);\n  fill(0);\n  text(scores[i].toPrecision(3), i * dx, height - h);\n  }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "棒グラフの色を塗り分ける",
        "next": "fill_bar_chart_algorithm"
      }
    ]
  },
  "fill_bar_chart_algorithm": {
    "optionType": "algorithm",
    "message": "棒グラフの色を塗り分けるためにどうしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  fill(0)\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n  for(let i = 0; i < scores.length; i++){\n  const dx = width / scores.length;\n  const h = height * scores[i] / 100;\n  rect(i * dx + 2, height - h, dx - 4, h);\n  fill(0);\n  text(scores[i].toPrecision(3), i * dx, height - h);\n  }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "条件分岐を使い，最大値を赤，最小値を青，それ以外を灰色で塗り分ける",
        "next": "fill_bar_chart_confirm"
      }
    ]
  },
  "fill_bar_chart_confirm": {
    "optionType": "confirm",
    "message": "条件分岐で棒グラフを塗り分けるコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  fill(0)\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n  for(let i = 0; i < scores.length; i++){\n  const dx = width / scores.length;\n  const h = height * scores[i] / 100;\n  rect(i * dx + 2, height - h, dx - 4, h);\n  fill(0);\n  text(scores[i].toPrecision(3), i * dx, height - h);\n  }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "if (scores[i] === largest) { fill(255, 0, 0); } else if (scores[i] === smallest) { fill(0, 0, 255); } else { fill(122); }",
        "next": "draw_ave_line_policy"
      }
    ]
  },

  "draw_ave_line_policy": {
    "optionType": "policy",
    "message": "次に何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n\n  noStroke();\n  for(let i = 0; i < scores.length; i++){\n    const dx = width / scores.length;\n    const h = height * scores[i] / 100;\n    if (scores[i] === largest) {\n      fill(255, 0, 0);\n    } else if (scores[i] === smallest) {\n      fill(0, 0, 255);\n    } else {\n      fill(122);\n    }\n    rect(i * dx + 2, height - h, dx - 4, h);\n    fill(0);\n    text(scores[i].toPrecision(3), i * dx, height - h);\n  }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "平均値の線を引く",
        "next": "draw_ave_line_algorithm"
      }
    ]
  },
  "draw_ave_line_algorithm": {
    "optionType": "algorithm",
    "message": "平均値の線を引くために何をしますか?",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n\n  noStroke();\n  for(let i = 0; i < scores.length; i++){\n    const dx = width / scores.length;\n    const h = height * scores[i] / 100;\n    if (scores[i] === largest) {\n      fill(255, 0, 0);\n    } else if (scores[i] === smallest) {\n      fill(0, 0, 255);\n    } else {\n      fill(122);\n    }\n    rect(i * dx + 2, height - h, dx - 4, h);\n    fill(0);\n    text(scores[i].toPrecision(3), i * dx, height - h);\n  }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "平均の値の箇所に緑色の横線を描く",
        "next": "draw_ave_line_confirm"
      }
    ]
  },
  "draw_ave_line_confirm": {
    "optionType": "confirm",
    "message": "平均の値の箇所に緑色の横線を描くコードを確認しましょう",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n\n  noStroke();\n  for(let i = 0; i < scores.length; i++){\n    const dx = width / scores.length;\n    const h = height * scores[i] / 100;\n    if (scores[i] === largest) {\n      fill(255, 0, 0);\n    } else if (scores[i] === smallest) {\n      fill(0, 0, 255);\n    } else {\n      fill(122);\n    }\n    rect(i * dx + 2, height - h, dx - 4, h);\n    fill(0);\n    text(scores[i].toPrecision(3), i * dx, height - h);\n  }\n}",
    "drawFunction": "",
    "choices": [
      {
        "text": "stroke(0, 255, 0); const ah = height * average / 100; line(0, height -  ah, width, height-ah);",
        "next": "answer"
      }
    ]
  },
  "answer": {
    "optionType": "answer",
    "message": "正解です",
    "setupFunction": "function setup(){\n  createCanvas(400, 400);\n  background(240);\n  let scores = [];\n\n  for(let i = 0; i < 10; i++){\n    scores[i] = random(20, 100); // 60以上100未満のランダムな数を代入\n  }\n  console.log(scores);\n\n  let sum = 0;\n  for(let i = 0; i < scores.length; i++){\n    sum += scores[i];\n  }\n  console.log(sum);  \n\n  //平均値\n  let average = sum / scores.length;\n  console.log(average);  \n\n  //最大値\n  let largest = 0;\n  for(let i = 0; i < scores.length; i++){\n    if (largest < scores[i]) {\n      largest = scores[i];\n    }\n  }\n  console.log(largest);  \n\n  //最小値\n  let smallest = 100;\n  for(let i = 0; i < scores.length; i++){\n    if (scores[i] < smallest) {\n      smallest = scores[i];\n    }\n  }\n  console.log(smallest);\n\n  //棒グラフ\n  const n = 10;\n  for(let i = 0; i < n; i++){ line(0, height * i / n, width, height * i / n); }\n\n  noStroke();\n  for(let i = 0; i < scores.length; i++){\n    const dx = width / scores.length;\n    const h = height * scores[i] / 100;\n    if (scores[i] === largest) {\n      fill(255, 0, 0);\n    } else if (scores[i] === smallest) {\n      fill(0, 0, 255);\n    } else {\n      fill(122);\n    }\n    rect(i * dx + 2, height - h, dx - 4, h);\n    fill(0);\n    text(scores[i].toPrecision(3), i * dx, height - h);\n  }\n\n  stroke(0, 255, 0);\n  const ah = height * average/100\n  line(0, height -  ah, width, height-ah);\n}",
    "drawFunction": "",
    "choices": [
    ]
  }
}
