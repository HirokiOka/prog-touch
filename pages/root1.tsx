import Head from 'next/head';
import Link from 'next/link';
import Image from 'next/image';
import problemPic from '../public/sec2_2.png';
import dynamic from 'next/dynamic';
import p5Types from 'p5';

const Sketch = dynamic(import('react-p5'), {
  loading: () => <>loading...</>,
  ssr: false,
});

export const SketchComponent = () => {
  const setup = (p5: p5Types, canvasParentRef: Element) => {
    p5.createCanvas(100, 100).parent(canvasParentRef);
    p5.background(196);
    p5.line(10, 0, 10, 100);
  };

  const draw = (p5: p5Types) => {
  };

  return (
    <Sketch
      setup={setup}
      draw={draw}
    />
  );
}


export default function RouteOne() {
  const sourceCode = `function setup() {
  createCanvas(100, 100);
  background(196);
  line(10, 0, 10, 100);
}
  `;
  const handleClick = () => {
    history.back();
  };

  return (
    <>
      <Head>
        <title>Prog Touch</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="font-mono px-6">
        <h1 className="text-3xl font-bold underline p-2">Prog Touch</h1>
        <h2 className="text-2xl">Problem 1: root1</h2>
        <p>
          繰り返しを使って描画する練習として、9本の縦線を書くプログラムを作成してみましょう。 
        </p>

        <div className="float-left mx-2">
          <p>正解：</p>
          <Image
            src={problemPic}
            alt="Image of problem (Section2-2)"
          />
        </div> 
        <div className="float">
          <p>出力: </p>
          <SketchComponent />
        </div>

        <h2 className="p-2">あなたのコード：
        <div className="border border-black w-1/3">
            <pre>
              <code>
                {sourceCode}
              </code>
            </pre>
        </div>
        </h2>

        <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onClick={handleClick}>一手戻る</button>
        <ul className="m-2 text-xl list-disc list-inside">方針:
          <li><Link href="/root1" className="text-blue-500 hover:underline">もう1本線を引いてみる (line(x1, y1, x2, y2))</Link></li>
          <li><Link href="/for" className="text-blue-500 hover:underline">繰り返しを使う (for(;;))</Link></li>
        </ul>

      </main>
    </>
  );
}
